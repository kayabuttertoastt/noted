"use strict";
/*
 * Copyright (c) "Neo4j"
 * Neo4j Sweden AB [http://neo4j.com]
 *
 * This file is part of Neo4j.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.elementId = exports.id = exports.randomUUID = exports.coalesce = void 0;
const CypherFunctions_1 = require("./CypherFunctions");
/**
 * @see [Cypher Documentation](https://neo4j.com/docs/cypher-manual/current/functions/scalar/#functions-coalesce)
 * @group Cypher Functions
 */
function coalesce(expr, ...optionalExpr) {
    return new CypherFunctions_1.CypherFunction("coalesce", [expr, ...optionalExpr]);
}
exports.coalesce = coalesce;
/**
 * @see [Cypher Documentation](https://neo4j.com/docs/cypher-manual/current/functions/scalar/#functions-randomuuid)
 * @group Cypher Functions
 */
function randomUUID() {
    return new CypherFunctions_1.CypherFunction("randomUUID");
}
exports.randomUUID = randomUUID;
/**
 * @see [Cypher Documentation](https://neo4j.com/docs/cypher-manual/current/functions/scalar/#functions-id)
 * @group Cypher Functions
 */
function id(variable) {
    return new CypherFunctions_1.CypherFunction("id", [variable]);
}
exports.id = id;
/**
 * @see [Cypher Documentation](https://neo4j.com/docs/cypher-manual/current/functions/scalar/#functions-elementid)
 * @group Cypher Functions
 */
function elementId(variable) {
    return new CypherFunctions_1.CypherFunction("elementId", [variable]);
}
exports.elementId = elementId;
