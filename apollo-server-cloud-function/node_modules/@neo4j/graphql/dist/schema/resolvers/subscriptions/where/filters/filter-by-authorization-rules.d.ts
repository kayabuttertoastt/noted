import type { Node, SubscriptionsEvent } from "../../../../../types";
import type { ObjectFields } from "../../../../get-obj-field-meta";
import type { RecordType, RelationshipType, SubscriptionContext } from "../../types";
import type { SubscriptionsAuthorizationWhere } from "../../../../../schema-model/annotation/SubscriptionsAuthorizationAnnotation";
export declare function filterByAuthorizationRules({ node, where, event, nodes, relationshipFields, context, }: {
    node: Node;
    where: SubscriptionsAuthorizationWhere | Record<string, RecordType | Record<string, RecordType | RelationshipType> | Array<Record<string, RecordType>>>;
    event: SubscriptionsEvent;
    nodes?: Node[];
    relationshipFields?: Map<string, ObjectFields>;
    context: SubscriptionContext;
}): boolean;
//# sourceMappingURL=filter-by-authorization-rules.d.ts.map