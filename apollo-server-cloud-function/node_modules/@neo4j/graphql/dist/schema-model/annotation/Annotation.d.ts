import { AuthenticationAnnotation } from "./AuthenticationAnnotation";
import { AuthorizationAnnotation } from "./AuthorizationAnnotation";
import { CypherAnnotation } from "./CypherAnnotation";
import { KeyAnnotation } from "./KeyAnnotation";
import { SubscriptionsAuthorizationAnnotation } from "./SubscriptionsAuthorizationAnnotation";
export type Annotation = CypherAnnotation | AuthorizationAnnotation | AuthenticationAnnotation | KeyAnnotation | SubscriptionsAuthorizationAnnotation;
export declare enum AnnotationsKey {
    cypher = "cypher",
    authorization = "authorization",
    authentication = "authentication",
    key = "key",
    subscriptionsAuthorization = "subscriptionsAuthorization"
}
export type Annotations = {
    [AnnotationsKey.cypher]: CypherAnnotation;
    [AnnotationsKey.authorization]: AuthorizationAnnotation;
    [AnnotationsKey.authentication]: AuthenticationAnnotation;
    [AnnotationsKey.key]: KeyAnnotation;
    [AnnotationsKey.subscriptionsAuthorization]: SubscriptionsAuthorizationAnnotation;
};
export declare function annotationToKey(ann: Annotation): keyof Annotations;
//# sourceMappingURL=Annotation.d.ts.map