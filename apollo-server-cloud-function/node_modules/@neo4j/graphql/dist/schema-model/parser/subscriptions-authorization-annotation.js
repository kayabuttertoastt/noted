"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.parseSubscriptionsAuthorizationAnnotation = void 0;
const classes_1 = require("../../classes");
const utils_1 = require("./utils");
const SubscriptionsAuthorizationAnnotation_1 = require("../annotation/SubscriptionsAuthorizationAnnotation");
function parseSubscriptionsAuthorizationAnnotation(directive) {
    const { filter, ...unrecognizedArguments } = (0, utils_1.parseArguments)(directive);
    if (!filter) {
        throw new classes_1.Neo4jGraphQLSchemaValidationError(`@subscriptionsAuthorization requires at least one of ${SubscriptionsAuthorizationAnnotation_1.SubscriptionsAuthorizationAnnotationArguments.join(", ")} arguments`);
    }
    if (Object.keys(unrecognizedArguments).length) {
        throw new classes_1.Neo4jGraphQLSchemaValidationError(`@subscriptionsAuthorization unrecognized arguments: ${Object.keys(unrecognizedArguments).join(", ")}`);
    }
    const filterRules = filter?.map((rule) => new SubscriptionsAuthorizationAnnotation_1.SubscriptionsAuthorizationFilterRule(rule));
    return new SubscriptionsAuthorizationAnnotation_1.SubscriptionsAuthorizationAnnotation({
        filter: filterRules,
    });
}
exports.parseSubscriptionsAuthorizationAnnotation = parseSubscriptionsAuthorizationAnnotation;
//# sourceMappingURL=subscriptions-authorization-annotation.js.map