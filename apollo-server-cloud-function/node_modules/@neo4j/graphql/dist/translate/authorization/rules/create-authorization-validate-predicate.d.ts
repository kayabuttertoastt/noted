import Cypher from "@neo4j/cypher-builder";
import type { Node } from "../../../classes";
import type { AuthorizationValidateRule } from "../../../schema-model/annotation/AuthorizationAnnotation";
import type { Context, PredicateReturn } from "../../../types";
import type { AuthorizationOperation, AuthorizationValidateWhen } from "../../../types/authorization";
export declare function createAuthorizationValidatePredicate({ when, context, node, rules, variable, operations, conditionForEvaluation, }: {
    when: AuthorizationValidateWhen;
    context: Context;
    node: Node;
    rules: AuthorizationValidateRule[];
    variable: string | Cypher.Node;
    operations: AuthorizationOperation[];
    conditionForEvaluation?: Cypher.Predicate;
}): PredicateReturn | undefined;
//# sourceMappingURL=create-authorization-validate-predicate.d.ts.map